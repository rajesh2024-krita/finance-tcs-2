{
  "info": {
    "name": "Society Management API",
    "description": "Complete API documentation for Society Management System with hierarchical authentication and approval workflow",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "**Auth Required**: None\n\n**Purpose**: Authenticate users and get JWT token\n\n**Roles Supported**: All roles (SuperAdmin, SocietyAdmin, User)\n\n**Pre-seeded Super Admin**:\n- Username: admin\n- Password: admin\n\n**Request Body**:\n```json\n{\n  \"username\": \"string\",\n  \"password\": \"string\"\n}\n```\n\n**Success Response (200)**:\n```json\n{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": 1,\n    \"username\": \"admin\",\n    \"firstName\": \"Super\",\n    \"lastName\": \"Admin\",\n    \"email\": \"admin@societymanagement.com\",\n    \"phone\": \"\",\n    \"role\": 1,\n    \"societyId\": null,\n    \"societyName\": null,\n    \"createdAt\": \"2024-08-25T15:43:21.933623Z\"\n  }\n}\n```"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"id\": 1,\n    \"username\": \"admin\",\n    \"firstName\": \"Super\",\n    \"lastName\": \"Admin\",\n    \"email\": \"admin@societymanagement.com\",\n    \"phone\": \"\",\n    \"role\": 1,\n    \"societyId\": null,\n    \"societyName\": null,\n    \"createdAt\": \"2024-08-25T15:43:21.933623Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            },
            "description": "**Auth Required**: Bearer Token\n\n**Purpose**: Get current user's profile information\n\n**Roles Supported**: All authenticated users\n\n**Headers**:\n```\nAuthorization: Bearer <JWT_TOKEN>\n```\n\n**Success Response (200)**:\n```json\n{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"firstName\": \"Super\",\n  \"lastName\": \"Admin\",\n  \"email\": \"admin@societymanagement.com\",\n  \"phone\": \"\",\n  \"role\": 1,\n  \"societyId\": null,\n  \"societyName\": null,\n  \"createdAt\": \"2024-08-25T15:43:21.933623Z\"\n}\n```"
          }
        }
      ]
    },
    {
      "name": "Society Management",
      "item": [
        {
          "name": "Create Society (Super Admin Only)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"societyName\": \"ABC Cooperative Society\",\n  \"registrationNumber\": \"REG001\",\n  \"address\": \"123 Main Street\",\n  \"city\": \"Mumbai\",\n  \"phone\": \"9876543210\",\n  \"fax\": \"022-12345678\",\n  \"email\": \"contact@abcsociety.com\",\n  \"website\": \"www.abcsociety.com\",\n  \"dividend\": 5.5,\n  \"overdraft\": 10000.00,\n  \"currentDeposit\": 50000.00,\n  \"loan\": 100000.00,\n  \"emergencyLoan\": 25000.00,\n  \"las\": 15000.00,\n  \"shareLimit\": 1000.00,\n  \"loanLimit\": 200000.00,\n  \"emergencyLoanLimit\": 50000.00,\n  \"chequeBounceCharge\": 500.00,\n  \"chequeReturnCharge\": 300.00,\n  \"cash\": 75000.00,\n  \"bonus\": 2.5,\n  \"adminUsername\": \"societyadmin1\",\n  \"adminPassword\": \"admin123\",\n  \"adminFirstName\": \"Society\",\n  \"adminLastName\": \"Administrator\",\n  \"adminEmail\": \"admin@abcsociety.com\",\n  \"adminPhone\": \"9876543211\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/society",
              "host": ["{{baseUrl}}"],
              "path": ["society"]
            },
            "description": "**Auth Required**: Bearer Token (Super Admin only)\n\n**Purpose**: Create a new society with automatic Society Admin creation\n\n**Roles Supported**: SuperAdmin only\n\n**Request Body**: Complete society information with admin details\n\n**Success Response (201)**: Created society object with ID"
          }
        },
        {
          "name": "Get All Societies",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/society",
              "host": ["{{baseUrl}}"],
              "path": ["society"]
            },
            "description": "**Auth Required**: Bearer Token\n\n**Purpose**: Get all societies (SuperAdmin sees all, others see only their society)\n\n**Roles Supported**: SuperAdmin, SocietyAdmin, User\n\n**Data Access Rules**:\n- SuperAdmin: All societies\n- SocietyAdmin: Only their society\n- User: Only their society"
          }
        },
        {
          "name": "Get Society by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/society/1",
              "host": ["{{baseUrl}}"],
              "path": ["society", "1"]
            },
            "description": "**Auth Required**: Bearer Token\n\n**Purpose**: Get specific society by ID\n\n**Roles Supported**: SuperAdmin, SocietyAdmin, User\n\n**Data Access Rules**: Users can only access their own society"
          }
        },
        {
          "name": "Update Society",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"societyName\": \"ABC Updated Society\",\n  \"address\": \"456 New Address\",\n  \"phone\": \"9876543220\",\n  \"dividend\": 6.0\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/society/1",
              "host": ["{{baseUrl}}"],
              "path": ["society", "1"]
            },
            "description": "**Auth Required**: Bearer Token\n\n**Purpose**: Update society details\n\n**Roles Supported**: SuperAdmin, SocietyAdmin\n\n**Business Rules**:\n- SuperAdmin: Changes apply immediately\n- SocietyAdmin: Changes go to pending approval state\n- Society Admin can only edit their own society\n\n**Approval Flow**: SocietyAdmin edits require ALL Users in that society to approve before becoming active"
          }
        },
        {
          "name": "Get Pending Society Edits",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/society/pending-edits",
              "host": ["{{baseUrl}}"],
              "path": ["society", "pending-edits"]
            },
            "description": "**Auth Required**: Bearer Token\n\n**Purpose**: Get all pending society edits awaiting approval\n\n**Roles Supported**: SuperAdmin, User\n\n**Data Access Rules**:\n- SuperAdmin: See all pending edits across all societies\n- User: See only pending edits for their society"
          }
        },
        {
          "name": "Approve/Reject Pending Edit",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"isApproved\": true,\n  \"comments\": \"Approved - changes look good\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/society/approve-edit/1",
              "host": ["{{baseUrl}}"],
              "path": ["society", "approve-edit", "1"]
            },
            "description": "**Auth Required**: Bearer Token (User role)\n\n**Purpose**: Approve or reject pending society edits\n\n**Roles Supported**: User only\n\n**Business Rules**: \n- Only Users can approve/reject\n- ALL Users in the society must approve for changes to take effect\n- Changes become active once unanimous approval is received"
          }
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"newuser1\",\n  \"password\": \"password123\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@abcsociety.com\",\n  \"phone\": \"9876543212\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/user",
              "host": ["{{baseUrl}}"],
              "path": ["user"]
            },
            "description": "**Auth Required**: Bearer Token (Society Admin only)\n\n**Purpose**: Create new Users within society\n\n**Roles Supported**: SocietyAdmin only\n\n**Business Rules**:\n- Society Admin can only create Users in their own society\n- Created Users automatically belong to the Society Admin's society\n- Users have role = 3 (User enum value)"
          }
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/user",
              "host": ["{{baseUrl}}"],
              "path": ["user"]
            },
            "description": "**Auth Required**: Bearer Token\n\n**Purpose**: Get all users with role-based filtering\n\n**Roles Supported**: SuperAdmin, SocietyAdmin\n\n**Data Access Rules**:\n- SuperAdmin: All users across all societies\n- SocietyAdmin: Only users within their society"
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/user/1",
              "host": ["{{baseUrl}}"],
              "path": ["user", "1"]
            },
            "description": "**Auth Required**: Bearer Token\n\n**Purpose**: Get specific user by ID\n\n**Roles Supported**: SuperAdmin, SocietyAdmin\n\n**Data Access Rules**: Society Admins can only access users within their society"
          }
        }
      ]
    },
    {
      "name": "Member Management",
      "item": [
        {
          "name": "Create Member",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Jane\",\n  \"lastName\": \"Smith\",\n  \"email\": \"jane.smith@example.com\",\n  \"phone\": \"9876543213\",\n  \"address\": \"789 Member Street, City\",\n  \"membershipNumber\": \"MEM001\",\n  \"dateOfJoining\": \"2024-08-25T00:00:00.000Z\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/member",
              "host": ["{{baseUrl}}"],
              "path": ["member"]
            },
            "description": "**Auth Required**: Bearer Token\n\n**Purpose**: Create new Members\n\n**Roles Supported**: SocietyAdmin, User\n\n**Business Rules**:\n- SocietyAdmin: Can create members in their society\n- User: Can create members in their society\n- Members are tied to the creating user and society\n- Members cannot login (no authentication panel)"
          }
        },
        {
          "name": "Get All Members",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/member",
              "host": ["{{baseUrl}}"],
              "path": ["member"]
            },
            "description": "**Auth Required**: Bearer Token\n\n**Purpose**: Get all members with role-based filtering\n\n**Roles Supported**: SuperAdmin, SocietyAdmin, User\n\n**Data Access Rules**:\n- SuperAdmin: All members across all societies\n- SocietyAdmin: All members within their society\n- User: Only members they created within their society"
          }
        },
        {
          "name": "Get Member by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/member/1",
              "host": ["{{baseUrl}}"],
              "path": ["member", "1"]
            },
            "description": "**Auth Required**: Bearer Token\n\n**Purpose**: Get specific member by ID\n\n**Roles Supported**: SuperAdmin, SocietyAdmin, User\n\n**Data Access Rules**: Users can only access members within their society"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Auto-extract token from login response",
          "if (pm.request.url.path.includes('login')) {",
          "    pm.test('Auto-set auth token', function () {",
          "        if (pm.response.json().token) {",
          "            pm.collectionVariables.set('authToken', pm.response.json().token);",
          "        }",
          "    });",
          "}"
        ]
      }
    }
  ]
}